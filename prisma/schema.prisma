generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Customer {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  contact   Contact?
  ticket    Ticket[]
}


model Ticket {
  id         Int      @id @default(autoincrement())
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int
  screening  Screening @relation(fields: [screeningId], references: [id])
  screeningId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Contact {
  id         Int      @id @default(autoincrement())
  customerID Int      @unique
  customer Customer   @relation(fields:[customerID], references: [id])
  phone      String
  email      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Movie {
  id         Int      @id @default(autoincrement())
  title      String
  runtimeMins Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Screening  Screening[]
}

model Screening {
  id         Int      @id @default(autoincrement())
  movie      Movie    @relation(fields: [movieId], references: [id])
  movieId    Int      @unique
  startsAt   DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  screen     Screen   @relation(fields: [screenId], references: [id])
  screenId    Int     @unique
  ticket    Ticket[]

}

model Screen {
  id         Int      @id @default(autoincrement())
  screening  Screening[]
  number     Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

}
